#jinja2: trim_blocks: False
database:
  driverClass: org.postgresql.Driver
  url: "substituted-at-runtime-from-environment"

  #db connection properties
  initialSize: {{ db_initial_size | default(1) }}
  minSize: {{ db_min_size | default(1) }}
  maxSize: {{ db_max_size | default(4) }}

  properties:
    charSet: UTF-8

{% for reg in item.value -%}
{%- set register_name = reg -%}
{%- set app_user = "openregister" -%}
{%- set app_password = lookup("pass", "{{ vpc }}/app/mint/" + reg).decode('utf-8') -%}
{%- set settings = register_settings[reg] | default({}) -%}
{%- set default_field_register_url = "https://field." + vpc + ".openregister.org/records.yaml?page-size=5000"  -%}
{%- set default_register_register_url = "https://register." + vpc + ".openregister.org/records.yaml?page-size=5000"  -%}

{%- if loop.first -%}
register: {{ register_name }}
schema: {{ register_name }}
enableDownloadResource: {{ settings.enable_download_resource | default(true) }}
enableRegisterDataDelete: {{ settings.enable_register_data_delete | default(enable_register_data_delete) | default(false) }}

fieldsYamlLocation: {{ settings.fields_yaml_location | default(default_field_register_url) }}
registersYamlLocation: {{ settings.registers_yaml_location | default(default_register_register_url) }}

{% if settings.history_page_url is defined %}historyPageUrl: {{ settings.history_page_url }}{% endif %}
{% if settings.indexes is defined %}indexes:
  {% for index in settings.indexes -%}
    - {{ index }}
  {% endfor %}
{% endif %}
{% if settings.similar_registers is defined %}similarRegisters:
  {% for register in settings.similar_registers -%}
    - {{ register }}
  {% endfor %}
{% endif %}

registerDomain: {{ register_domain }}
externalConfigDirectory: /tmp
downloadConfigs: true

server:
  applicationConnectors:
    - type: http
      port: {% if paas %}${PORT}{% else %}8080{% endif %}
  registerDefaultExceptionMappers: false
  requestLog:
    {% if paas %}
    appenders:
      - type: access-logstash-console
    {% else %}
    type: classic
    appenders:
      - type: logstash-console
    {% endif %}

credentials:
  user: {{ app_user }}
  password: {{ app_password }}

# Logging settings.
logging:
  level: WARN
  appenders:
    - type: logstash-console

{% if not paas %}
metrics:
  reporters:
    - type: graphite
      host: telegraf
      port: 8092
      transport: udp
      frequency: 5 seconds
{% endif %}

{% if loop.length > 1 %}
registers:
{% endif %}
{% else %}
  {{ reg }}:
    schema: {{ register_name }}
    enableDownloadResource: {{ settings.enable_download_resource | default(true) }}
    enableRegisterDataDelete: {{ settings.enable_register_data_delete | default(enable_register_data_delete) | default(false) }}
    {% if settings.history_page_url is defined %}historyPageUrl: {{ settings.history_page_url }}{% endif %}
    {% if settings.indexes is defined %}indexes:
      {% for index in settings.indexes -%}
        - {{ index }}
      {% endfor %}
    {% endif %}
    {% if settings.similar_registers is defined %}similarRegisters:
      {% for register in settings.similar_registers -%}
        - {{ register }}
      {% endfor %}
    {% endif %}

    credentials:
      user: {{ app_user }}
      password: {{ app_password }}

{% endif %}
{% endfor %}
