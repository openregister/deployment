- name: files resources
  file:
    path: "{{ item.value.path | default(item.key) }}"
    follow: "{{ item.value.follow | default(omit) }}"
    force: "{{ item.value.force | default(omit) }}"
    group: "{{ item.value.group | default(omit) }}"
    mode: "{{ item.value.mode | default(omit) }}"
    owner: "{{ item.value.owner | default(omit) }}"
    recurse: "{{ item.value.recurse | default(omit) }}"
    selevel: "{{ item.value.selevel | default(omit) }}"
    serole: "{{ item.value.serole | default(omit) }}"
    setype: "{{ item.value.setype | default(omit) }}"
    seuser: "{{ item.value.seuser | default(omit) }}"
    src: "{{ item.value.src | default(omit) }}"
    state: "{{ item.value.state | default('file') }}"
  tags:
    - files
  with_dict: "{{ files }}"
  when: ansible_distribution == 'Amazon'

- name: file content resources
  copy:
    dest: "{{ item.value.dest | default(item.key) }}"
    backup: "{{ item.value.backup | default(omit) }}"
    content: "{{ item.value.content | default(omit) }}"
    directory_mode: "{{ item.value.directory_mode | default(omit) }}"
    follow: "{{ item.value.follow | default(omit) }}"
    force: "{{ item.value.force | default(omit) }}"
    group: "{{ item.value.group | default(omit) }}"
    mode: "{{ item.value.mode | default(omit) }}"
    owner: "{{ item.value.owner | default(omit) }}"
    remote_src: "{{ item.value.remote_src | default(omit) }}"
    selevel: "{{ item.value.selevel | default(omit) }}"
    serole: "{{ item.value.serole | default(omit) }}"
    setype: "{{ item.value.setype | default(omit) }}"
    seuser: "{{ item.value.seuser | default(omit) }}"
    src: "{{ item.value.src | default(omit) }}"
    validate: "{{ item.value.state | default(omit) }}"
  tags:
    - files
  with_dict: "{{ files_content }}"
  when: ansible_distribution == 'Amazon'

- name: inline resources
  lineinfile:
    dest: "{{ item.value.path | default(item.key) }}"
    state: "{{ item.value.state | default('present') }}"
    regexp: "{{ item.value.match }}"
    line: "{{ item.value.value }}"
  tags:
    - files
  with_dict: "{{ files_inline }}"
  when: ansible_distribution == 'Amazon'
